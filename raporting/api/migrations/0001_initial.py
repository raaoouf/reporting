# Generated by Django 5.0 on 2024-03-25 02:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NatureAi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Etulisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='', max_length=200)),
                ('prenom', models.CharField(default='', max_length=200)),
                ('mail', models.EmailField(default='', max_length=254)),
                ('site', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Brq_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ras', models.BooleanField()),
                ('date_ai', models.DateField(null=True)),
                ('cause_ai', models.TextField(default='/')),
                ('lieu_ai', models.TextField(default='/')),
                ('temp_ai', models.TimeField(null=True)),
                ('desc_succincte', models.TextField(blank=True)),
                ('fatal_entre_prise', models.TextField(blank=True)),
                ('fatal_prestataire', models.TextField(blank=True)),
                ('fatal_tiers', models.TextField(blank=True)),
                ('fatal_etrangers', models.TextField(blank=True)),
                ('nbr_blesse', models.CharField(max_length=10)),
                ('desc_degats_corporels', models.TextField(blank=True)),
                ('desc_degats_materiels', models.TextField(blank=True)),
                ('desc_degats_environnementaux', models.TextField(blank=True)),
                ('dispositons_prise', models.TextField(blank=True)),
                ('desc_dmg_personne', models.TextField(blank=True)),
                ('desc_dmg_env', models.TextField(blank=True)),
                ('desc_dmg_biens', models.TextField(blank=True)),
                ('desc_lieu', models.TextField(blank=True)),
                ('desc_deroulement', models.TextField(blank=True)),
                ('clas_ai', models.CharField(default='', max_length=10)),
                ('nature_ai', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.natureai')),
                ('site_ai', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.unit')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.unit')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User_role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_role', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.role')),
                ('id_user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.etulisateur')),
            ],
        ),
    ]
